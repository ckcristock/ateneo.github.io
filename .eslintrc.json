{
  "root": true,
  "ignorePatterns": [],
  "plugins": [
    "@typescript-eslint"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@angular-eslint/all",
        "airbnb-base",
        "airbnb-typescript/base",
        "plugin:prettier/recommended"
      ],
      "rules": {
        "class-methods-use-this": "off",
        "no-console": "error",
        "no-undef": "error",
        "no-unused-vars": "error",
        "no-undef-init": "error",
        "max-lines-per-function": [
          "warn",
          {
            "max": 75,
            "skipBlankLines": true,
            "skipComments": true
          }
        ],
        "prefer-arrow-callback": "error",
        "import/prefer-default-export": "off",
        "no-plusplus": "off",
        "@typescript-eslint/no-magic-numbers": [
          "warn",
          {
            "ignore": [],
            "ignoreArrayIndexes": true,
            "enforceConst": true,
            "detectObjects": false
          }
        ],
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-useless-constructor": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-empty-function": [
          "error",
          {
            "allow": [
              "arrowFunctions",
              "constructors"
            ]
          }
        ],
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/no-plusplus": "off",
        "@typescript-eslint/prefer-readonly": "error",
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/component-max-inline-declarations": [
          "error",
          {
            "template": 0
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": [
              "app"
            ],
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/contextual-decorator": "error",
        "@angular-eslint/contextual-lifecycle": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "element",
            "prefix": [
              "app"
            ],
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-attribute-decorator": "warn",
        "@angular-eslint/no-conflicting-lifecycle": "error",
        "@angular-eslint/no-empty-lifecycle-method": "warn",
        "@angular-eslint/no-forward-ref": "error",
        "@angular-eslint/no-host-metadata-property": "error",
        "@angular-eslint/no-input-rename": "error",
        "@angular-eslint/no-inputs-metadata-property": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/no-output-native": "error",
        "@angular-eslint/no-output-on-prefix": "error",
        "@angular-eslint/no-output-rename": "error",
        "@angular-eslint/no-outputs-metadata-property": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/pipe-prefix": "error",
        "@angular-eslint/prefer-on-push-component-change-detection": "off",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/relative-url-prefix": "error",
        "@angular-eslint/sort-ngmodule-metadata-arrays": "warn",
        "@angular-eslint/use-component-selector": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@angular-eslint/use-injectable-provided-in": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-transform-interface": "error"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/all"
      ],
      "rules": {
        "max-len": [
          "error",
          {
            "code": 140
          }
        ],
        "@angular-eslint/template/banana-in-box": "error",
        "@angular-eslint/template/click-events-have-key-events": "warn",
        "@angular-eslint/template/conditional-complexity": "warn",
        "@angular-eslint/template/cyclomatic-complexity": "warn",
        "@angular-eslint/template/eqeqeq": "warn",
        "@angular-eslint/template/i18n": "off",
        "@angular-eslint/template/mouse-events-have-key-events": "warn",
        "@angular-eslint/template/no-any": "warn",
        "@angular-eslint/template/no-autofocus": "warn",
        "@angular-eslint/template/no-call-expression": "warn",
        "@angular-eslint/template/no-distracting-elements": "error",
        "@angular-eslint/template/no-duplicate-attributes": "error",
        "@angular-eslint/template/no-negated-async": "error",
        "@angular-eslint/template/no-positive-tabindex": "error",
        "@angular-eslint/template/use-track-by-function": "off",
        "@angular-eslint/template/alt-text": "error",
        "@angular-eslint/template/elements-content": "error",
        "@angular-eslint/template/label-has-associated-control": "error",
        "@angular-eslint/template/table-scope": "error",
        "@angular-eslint/template/valid-aria": "warn"
      }
    }
  ]
}
